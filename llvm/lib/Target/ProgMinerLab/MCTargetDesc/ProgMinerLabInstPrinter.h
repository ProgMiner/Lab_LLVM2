#pragma once

#include "llvm/MC/MCInstPrinter.h"


namespace llvm {

class ProgMinerLabInstPrinter : public MCInstPrinter {

public:

    ProgMinerLabInstPrinter(
        const MCAsmInfo & MAI,
        const MCInstrInfo & MII,
        const MCRegisterInfo & MRI
    ): MCInstPrinter(MAI, MII, MRI) {}

    void printRegName(raw_ostream & OS, MCRegister Reg) const override;

    void printInst(
        const MCInst * MI,
        uint64_t Address,
        StringRef Annot,
        const MCSubtargetInfo & STI,
        raw_ostream & O
    ) override;

    void printOperand(const MCInst * MI, int OpNo, raw_ostream & OS);
    void printImm8AsmOperand(const MCInst * MI, int OpNum, raw_ostream & O);
    void printImm32AsmOperand(const MCInst * MI, int OpNum, raw_ostream & O);

    // autogenerated by tblgen

    std::pair<const char *, uint64_t> getMnemonic(const MCInst * MI) override;

    void printInstruction(const MCInst * MI, uint64_t Address, raw_ostream & O);

    static const char * getRegisterName(MCRegister Reg);
};

} // namespace llvm
